{"version":3,"sources":["../../../../assets/Script/assets/Script/HelloWorld2.js"],"names":["cc","Class","extends","Component","properties","label","default","type","Label","text","onLoad","string","__initCfg","posX","posY","ratioVal","radiusVal","szBack","szFont","RubCardLayer_State_Move","RubCardLayer_State_Smooth","RubCardLayer_Dir_du","RubCardLayer_Dir_lr","RubCardLayer_Dir_rl","RubCardLayer_Dir_No","RubCardLayer_Pai","RubCardLayer_RotationFrame","RubCardLayer_RotationAnger","RubCardLayer_SmoothFrame","RubCardLayer_SmoothAnger","divNum","state","dirState","__startPoker","__createTextures","udBackBufferInfo","__initTexAndPos","udFrontBufferInfo","lrBackBufferInfo","lrFrontBufferInfo","__createGlNode","__createAllProgram","__registTouchEvent","__endPoker","self","setTimeout","__removeRes","glnode","GLNode","node","_sgNode","addChild","smoothFrame","isEndPoker","draw","__drawByMoveProgram","scale","__drawBySmoothProgram","Math","max","__drawByEndProgram","bind","layer","Layer","eventManager","addListener","event","EventListener","TOUCH_ONE_BY_ONE","onTouchBegan","touch","location","getLocation","x","touchStartLRX","touchStartRLX","y","touchStartY","pokerHeight","onTouchMoved","pokerWidth","min","onTouchEnded","log","moveVertSource","lTRVertSource","rTLVertSource","smoothVertSource","lTRSmoothVertSource","endVertSource","strFragSource","moveGlProgram","__createProgram","lTRGlProgram","rTLGlProgram","smoothGlProgram","lTRSmoothGlProgram","endGlProgram","retain","__intMoveProgram","__intSmoothProgram","offx","getUniformLocation","offy","vsource","fsource","glProgram","GLProgram","createWithByteArrays","link","updateUniforms","isUpDown","rotationLc","ratio","radius","Height","Width","backBufferInfo","frontBufferInfo","rotation","gl","enable","CULL_FACE","use","setUniformsForBuiltins","setUniformLocationF32","bindTexture","TEXTURE_2D","backSpriteId","__drawArrays","frontSpriteId","disable","buffInfo","pos","tex","enableVertexAttribArray","macro","VERTEX_ATTRIB_POSITION","VERTEX_ATTRIB_TEX_COORDS","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","drawArrays","TRIANGLES","posTexNum","isBack","isLeftRight","nDiv","verts","Array","texs","dh","dw","c","quad","i","quadX","quadY","numX","numY","push","k","posBuffer","createBuffer","bufferData","Float32Array","STATIC_DRAW","length","texBuffer","buffer_id","imgUrl","url","raw","frontSprite","textureCache","addImage","backSprite","pokerSize","getContentSize","height","width","_glID","winSize","__deleteBuff","_deleteBuffer","removeChild","release"],"mappings":"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","file":"HelloWorld2.js","sourceRoot":"../../../../assets/Script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n        // defaults, set visually when attaching this script to the Canvas\n        text: 'Hello, World!',\n    },\n\n    onLoad: function () {\n        this.label.string = this.text;\n        this.__initCfg();\n    },\n\n    __initCfg: function () {\n        this.posX = 0;\n        this.posY = 0;\n        this.ratioVal = 0;\n        this.radiusVal = 0;\n        this.szBack = \"resources/poker_beimian.png\";\n        this.szFont = \"resources/poker_10.png\";\n        this.RubCardLayer_State_Move = 0;\n        this.RubCardLayer_State_Smooth = 1;\n\n        this.RubCardLayer_Dir_du = 0;//上下搓牌\n        this.RubCardLayer_Dir_lr = 1;//左右搓牌\n        this.RubCardLayer_Dir_rl = 2;//右左搓牌\n        this.RubCardLayer_Dir_No = 3;//不搓牌\n\n        var RubCardLayer_Pai = 3.141592\n        this.RubCardLayer_RotationFrame = 10\n        this.RubCardLayer_RotationAnger = RubCardLayer_Pai/3\n        this.RubCardLayer_SmoothFrame = 10\n        this.RubCardLayer_SmoothAnger = RubCardLayer_Pai/6\n        this.divNum = 20\n\n        this.state = this.RubCardLayer_State_Move;\n        this.dirState = this.RubCardLayer_Dir_No\n\n        this.__startPoker()\n    },\n\n    __startPoker:function() {\n        this.__createTextures();\n        this.udBackBufferInfo = this.__initTexAndPos(true, false);\n        this.udFrontBufferInfo = this.__initTexAndPos(false, false);\n        this.lrBackBufferInfo = this.__initTexAndPos(true, true);\n        this.lrFrontBufferInfo = this.__initTexAndPos(false, true);\n        this.__createGlNode();\n        this.__createAllProgram();\n        this.__registTouchEvent()\n    },\n\n    __endPoker:function() {\n        var self = this\n        setTimeout(function(){\n            self.__removeRes()\n        },1000);\n    },\n\n    __createGlNode:function() {\n        var glnode = new cc.GLNode();\n        this.node._sgNode.addChild(glnode,10);\n        this.glnode = glnode;\n        this.smoothFrame = 1;\n        this.isEndPoker = false;\n\n        glnode.draw = function() {\n            if(this.state == this.RubCardLayer_State_Move){\n                this.__drawByMoveProgram(0);\n            }\n            else if(this.state == this.RubCardLayer_State_Smooth){\n                if(this.smoothFrame <= this.RubCardLayer_RotationFrame)\n                {\n                    this.__drawByMoveProgram(-this.RubCardLayer_RotationAnger*this.smoothFrame/this.RubCardLayer_RotationFrame);\n                }\n                else if(this.smoothFrame < (this.RubCardLayer_RotationFrame+this.RubCardLayer_SmoothFrame)){\n                    var scale = (this.smoothFrame - this.RubCardLayer_RotationFrame)/this.RubCardLayer_SmoothFrame;\n                    this.__drawBySmoothProgram(Math.max(0.01,this.RubCardLayer_SmoothAnger*(1-scale)))\n                }\n                else{\n                    //第一次到这里就铺平了\n                    this.__drawByEndProgram()\n                    if(!this.isEndPoker)\n                    {\n                        this.__endPoker()\n                        this.isEndPoker = true\n                    }\n                }\n                this.smoothFrame = this.smoothFrame + 1\n            }\n        }.bind(this);\n    },\n\n    __registTouchEvent: function(){\n        var layer = new cc.Layer();\n        this.node._sgNode.addChild(layer,10);\n        this.layer = layer\n        var self = this;\n        cc.eventManager.addListener({\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\n            onTouchBegan: function(touch, event)\n            {\n                var location = touch.getLocation();\n                if(location.x > self.touchStartLRX && location.x < self.touchStartRLX && location.y < (self.touchStartY + 100))\n                {\n                    self.dirState = self.RubCardLayer_Dir_du\n                }\n                else if(location.y > self.touchStartY && location.y < (self.touchStartY+self.pokerHeight) && location.x < (self.touchStartLRX + 100))\n                {\n                    self.dirState = self.RubCardLayer_Dir_lr\n                }\n                else if(location.y > self.touchStartY && location.y < (self.touchStartY+self.pokerHeight) && location.x > (self.touchStartRLX - 100))\n                {\n                    self.dirState = self.RubCardLayer_Dir_rl\n                }\n                else\n                {\n                    self.dirState = self.RubCardLayer_Dir_du\n                }\n                \n                return true;\n            },\n            onTouchMoved: function(touch, event){\n                var location = touch.getLocation();\n                if(self.dirState == self.RubCardLayer_Dir_du)\n                {\n                    self.ratioVal = (location.y-self.touchStartY)/self.pokerHeight;\n                }\n                else if(self.dirState == self.RubCardLayer_Dir_lr)\n                {\n                    self.ratioVal = (location.x-self.touchStartLRX)/self.pokerWidth;\n                }\n                else if(self.dirState == self.RubCardLayer_Dir_rl)\n                {\n                    self.ratioVal = (self.touchStartRLX-location.x)/self.pokerWidth;\n                }\n                self.ratioVal = Math.max(0, self.ratioVal);\n                self.ratioVal = Math.min(1, self.ratioVal);\n                return true;\n            },\n            onTouchEnded: function(touch, event){\n                cc.log(\"page view touch onTouchEnded\");\n                if(self.ratioVal >= 1)\n                {\n                    self.state = self.RubCardLayer_State_Smooth;\n                }\n                else\n                {\n                    self.ratioVal = 0\n                    self.dirState = self.RubCardLayer_Dir_du\n                }\n            },\n\n        }, layer);\n    },\n\n    __createAllProgram:function() {\n        var moveVertSource = \n        \"attribute vec2 a_position;\\n\"+\n        \"attribute vec2 a_texCoord;\\n\"+\n        \"uniform float ratio; \\n\"+\n        \"uniform float radius; \\n\"+\n        \"uniform float width;\\n\"+\n        \"uniform float height;\\n\"+\n        \"uniform float offx;\\n\"+\n        \"uniform float offy;\\n\"+\n        \"uniform float rotation;\\n\"+\n        \"varying vec2 v_texCoord;\\n\"+\n\n        \"void main()\\n\"+\n        \"{\\n\"+\n        \"   vec4 tmp_pos = vec4(a_position.x, a_position.y, 0.0, 1.0);\\n\"+\n\n        \"   float halfPeri = radius * 3.14159; \\n\"+\n        \"   float hr = height * ratio;\\n\"+\n        \"   if(hr > 0.0 && hr <= halfPeri){\\n\"+\n        \"         if(tmp_pos.y < hr){\\n\"+\n        \"               float rad = hr/ 3.14159;\\n\"+\n        \"               float arc = (hr-tmp_pos.y)/rad;\\n\"+\n        \"               tmp_pos.y = hr - sin(arc)*rad;\\n\"+\n        \"               tmp_pos.z = rad * (1.0-cos(arc)); \\n\"+\n        \"          }\\n\"+\n        \"   }\\n\"+\n        \"   if(hr > halfPeri){\\n\"+\n        \"        float straight = (hr - halfPeri)/2.0;\\n\"+\n        \"        if(tmp_pos.y < straight){\\n\"+\n        \"            tmp_pos.y = hr  - tmp_pos.y;\\n\"+\n        \"            tmp_pos.z = radius * 2.0; \\n\"+\n        \"        }\\n\"+\n        \"        else if(tmp_pos.y < (straight + halfPeri)) {\\n\"+\n        \"            float dy = halfPeri - (tmp_pos.y - straight);\\n\"+\n        \"            float arc = dy/radius;\\n\"+\n        \"            tmp_pos.y = hr - straight - sin(arc)*radius;\\n\"+\n        \"            tmp_pos.z = radius * (1.0-cos(arc)); \\n\"+\n        \"        }\\n\"+\n        \"    }\\n\"+\n        \"    float y1 = tmp_pos.y;\\n\"+\n        \"    float z1 = tmp_pos.z;\\n\"+\n        \"    float y2 = height;\\n\"+\n        \"    float z2 = 0.0;\\n\"+\n        \"    float sinRat = sin(rotation);\\n\"+\n        \"    float cosRat = cos(rotation);\\n\"+\n        \"    tmp_pos.y=(y1-y2)*cosRat-(z1-z2)*sinRat+y2;\\n\"+\n        \"    tmp_pos.z=(z1-z2)*cosRat+(y1-y2)*sinRat+z2;\\n\"+\n        \"    tmp_pos.y = tmp_pos.y - height/2.0*(1.0-cosRat);\\n\"+\n        \"    tmp_pos += vec4(offx, offy, 0.0, 0.0);\\n\"+\n        \"    gl_Position = CC_MVPMatrix * tmp_pos;\\n\"+\n        \"    v_texCoord = a_texCoord;\\n\"+\n        \"}\\n\";\n\n        var lTRVertSource = \n        \"attribute vec2 a_position;\\n\"+\n        \"attribute vec2 a_texCoord;\\n\"+\n        \"uniform float ratio; \\n\"+\n        \"uniform float radius; \\n\"+\n        \"uniform float width;\\n\"+\n        \"uniform float height;\\n\"+\n        \"uniform float offx;\\n\"+\n        \"uniform float offy;\\n\"+\n        \"uniform float rotation;\\n\"+\n        \"varying vec2 v_texCoord;\\n\"+\n\n        \"void main()\\n\"+\n        \"{\\n\"+\n        \"    vec4 tmp_pos = vec4(a_position.x, a_position.y, 0.0, 1.0);\\n\"+\n        \"    float halfPeri = radius * 3.14159; \\n\"+\n        \"    float hr = width * ratio;\\n\"+\n        \"    if(hr > 0.0 && hr <= halfPeri){\\n\"+\n        \"         if(tmp_pos.x < hr){\\n\"+\n        \"               float rad = hr/ 3.14159;\\n\"+\n        \"               float arc = (hr-tmp_pos.x)/rad;\\n\"+\n        \"               tmp_pos.x = hr - sin(arc)*rad;\\n\"+\n        \"               tmp_pos.z = rad * (1.0-cos(arc)); \\n\"+\n        \"          }\\n\"+\n        \"   }\\n\"+\n        \"   if(hr > halfPeri){\\n\"+\n        \"        float straight = (hr - halfPeri)/2.0;\\n\"+\n        \"        if(tmp_pos.x < straight){\\n\"+\n        \"            tmp_pos.x = hr  - tmp_pos.x;\\n\"+\n        \"            tmp_pos.z = radius * 2.0; \\n\"+\n        \"        }\\n\"+\n        \"        else if(tmp_pos.x < (straight + halfPeri)) {\\n\"+\n        \"            float dy = halfPeri - (tmp_pos.x - straight);\\n\"+\n        \"            float arc = dy/radius;\\n\"+\n        \"            tmp_pos.x = hr - straight - sin(arc)*radius;\\n\"+\n        \"            tmp_pos.z = radius * (1.0-cos(arc)); \\n\"+\n        \"        }\\n\"+\n        \"    }\\n\"+\n        \"    float x1 = tmp_pos.x;\\n\"+\n        \"    float z1 = tmp_pos.z;\\n\"+\n        \"    float x2 = width;\\n\"+\n        \"    float z2 = 0.0;\\n\"+\n        \"    float sinRat = sin(rotation);\\n\"+\n        \"    float cosRat = cos(rotation);\\n\"+\n        \"    tmp_pos.x=(x1-x2)*cosRat-(z1-z2)*sinRat+x2;\\n\"+\n        \"    tmp_pos.z=(z1-z2)*cosRat+(x1-x2)*sinRat+z2;\\n\"+\n        \"    tmp_pos.x = tmp_pos.x - width/2.0*(1.0-cosRat);\\n\"+\n        \"    tmp_pos += vec4(offx, offy, 0.0, 0.0);\\n\"+\n        \"    gl_Position = CC_MVPMatrix * tmp_pos;\\n\"+\n        \"    v_texCoord = a_texCoord;\\n\"+\n        \"}\\n\";\n\n        var rTLVertSource = \n        \"attribute vec2 a_position;\\n\"+\n        \"attribute vec2 a_texCoord;\\n\"+\n        \"uniform float ratio; \\n\"+\n        \"uniform float radius; \\n\"+\n        \"uniform float width;\\n\"+\n        \"uniform float height;\\n\"+\n        \"uniform float offx;\\n\"+\n        \"uniform float offy;\\n\"+\n        \"uniform float rotation;\\n\"+\n        \"varying vec2 v_texCoord;\\n\"+\n\n        \"void main()\\n\"+\n        \"{\\n\"+\n        \"    vec4 tmp_pos = vec4(width - a_position.x, a_position.y, 0.0, 1.0);\\n\"+\n        \"    float halfPeri = radius * 3.14159; \\n\"+\n        \"    float hr = width * ratio;\\n\"+\n        \"    if(hr > 0.0 && hr <= halfPeri){\\n\"+\n        \"         if(tmp_pos.x < hr){\\n\"+\n        \"               float rad = hr/ 3.14159;\\n\"+\n        \"               float arc = (hr-tmp_pos.x)/rad;\\n\"+\n        \"               tmp_pos.x = hr - sin(arc)*rad;\\n\"+\n        \"               tmp_pos.z = rad * (1.0-cos(arc)); \\n\"+\n        \"          }\\n\"+\n        \"   }\\n\"+\n        \"   if(hr > halfPeri){\\n\"+\n        \"        float straight = (hr - halfPeri)/2.0;\\n\"+\n        \"        if(tmp_pos.x < straight){\\n\"+\n        \"            tmp_pos.x = hr  - tmp_pos.x;\\n\"+\n        \"            tmp_pos.z = radius * 2.0; \\n\"+\n        \"        }\\n\"+\n        \"        else if(tmp_pos.x < (straight + halfPeri)) {\\n\"+\n        \"            float dy = halfPeri - (tmp_pos.x - straight);\\n\"+\n        \"            float arc = dy/radius;\\n\"+\n        \"            tmp_pos.x = hr - straight - sin(arc)*radius;\\n\"+\n        \"            tmp_pos.z = radius * (1.0-cos(arc)); \\n\"+\n        \"        }\\n\"+\n        \"    }\\n\"+\n        \"    float x1 = tmp_pos.x;\\n\"+\n        \"    float z1 = tmp_pos.z;\\n\"+\n        \"    float x2 = width;\\n\"+\n        \"    float z2 = 0.0;\\n\"+\n        \"    float sinRat = sin(rotation);\\n\"+\n        \"    float cosRat = cos(rotation);\\n\"+\n        \"    tmp_pos.x=(x1-x2)*cosRat-(z1-z2)*sinRat+x2;\\n\"+\n        \"    tmp_pos.z=(z1-z2)*cosRat+(x1-x2)*sinRat+z2;\\n\"+\n        \"    tmp_pos.x = tmp_pos.x - width/2.0*(1.0-cosRat);\\n\"+\n        \"    tmp_pos.x = width - tmp_pos.x;\\n\"+\n        \"    tmp_pos += vec4(offx, offy, 0.0, 0.0);\\n\"+\n        \"    gl_Position = CC_MVPMatrix * tmp_pos;\\n\"+\n        \"    v_texCoord = a_texCoord;\\n\"+\n        \"}\\n\";\n\n        var smoothVertSource = \n        \"attribute vec2 a_position;\\n\"+\n        \"attribute vec2 a_texCoord;\\n\"+\n        \"uniform float width;\\n\"+\n        \"uniform float height;\\n\"+\n        \"uniform float offx;\\n\"+\n        \"uniform float offy;\\n\"+\n        \"uniform float rotation;\\n\"+\n        \"varying vec2 v_texCoord;\\n\"+\n\n        \"void main()\\n\"+\n        \"{\\n\"+\n        \"    vec4 tmp_pos = vec4(a_position.x, a_position.y, 0.0, 1.0);\\n\"+\n        \"    float cl = height/5.0;\\n\"+\n        \"    float sl = (height - cl)/2.0;\\n\"+\n        \"    float radii = (cl/rotation)/2.0;\\n\"+\n        \"    float sinRot = sin(rotation);\\n\"+\n        \"    float cosRot = cos(rotation);\\n\"+\n        \"    float distance = radii*sinRot;\\n\"+\n        \"    float centerY = height/2.0;\\n\"+\n        \"    float poxY1 = centerY - distance;\\n\"+\n        \"    float poxY2 = centerY + distance;\\n\"+\n        \"    float posZ = sl*sinRot;\\n\"+\n        \"    if(tmp_pos.y <= sl){\\n\"+\n        \"       float length = sl - tmp_pos.y;\\n\"+\n        \"       tmp_pos.y = poxY1 - length*cosRot;\\n\"+\n        \"       tmp_pos.z = posZ - length*sinRot;\\n\"+\n        \"    }\\n\"+\n        \"    else if(tmp_pos.y < (sl+cl)){\\n\"+\n        \"       float el = tmp_pos.y - sl;\\n\"+\n        \"       float rotation2 = -el/radii;\\n\"+\n        \"       float x1 = poxY1;\\n\"+\n        \"       float y1 = posZ;\\n\"+\n        \"       float x2 = centerY;\\n\"+\n        \"       float y2 = posZ - radii*cosRot;\\n\"+\n        \"       float sinRot2 = sin(rotation2);\\n\"+\n        \"       float cosRot2 = cos(rotation2);\\n\"+\n        \"       tmp_pos.y=(x1-x2)*cosRot2-(y1-y2)*sinRot2+x2;\\n\"+\n        \"       tmp_pos.z=(y1-y2)*cosRot2+(x1-x2)*sinRot2+y2;\\n\"+\n        \"    }\\n\"+\n        \"    else if(tmp_pos.y <= height){\\n\"+\n        \"        float length = tmp_pos.y - cl - sl;\\n\"+\n        \"        tmp_pos.y = poxY2 + length*cosRot;\\n\"+\n        \"        tmp_pos.z = posZ - length*sinRot;\\n\"+\n        \"    }\\n\"+\n        \"    tmp_pos += vec4(offx, offy, 0.0, 0.0);\\n\"+\n        \"    gl_Position = CC_MVPMatrix * tmp_pos;\\n\"+\n        \"    v_texCoord = vec2(a_texCoord.x, 1.0-a_texCoord.y);\\n\"+\n        \"}\\n\";\n\n        var lTRSmoothVertSource = \n        \"attribute vec2 a_position;\\n\"+\n        \"attribute vec2 a_texCoord;\\n\"+\n        \"uniform float width;\\n\"+\n        \"uniform float height;\\n\"+\n        \"uniform float offx;\\n\"+\n        \"uniform float offy;\\n\"+\n        \"uniform float rotation;\\n\"+\n        \"varying vec2 v_texCoord;\\n\"+\n\n        \"void main()\\n\"+\n        \"{\\n\"+\n        \"    vec4 tmp_pos = vec4(a_position.x, a_position.y, 0.0, 1.0);\\n\"+\n        \"    float cl = width/5.0;\\n\"+\n        \"    float sl = (width - cl)/2.0;\\n\"+\n        \"    float radii = (cl/rotation)/2.0;\\n\"+\n        \"    float sinRot = sin(rotation);\\n\"+\n        \"    float cosRot = cos(rotation);\\n\"+\n        \"    float distance = radii*sinRot;\\n\"+\n        \"    float centerX = width/2.0;\\n\"+\n        \"    float posX1 = centerX - distance;\\n\"+\n        \"    float posX2 = centerX + distance;\\n\"+\n        \"    float posZ = sl*sinRot;\\n\"+\n        \"    if(tmp_pos.x <= sl){\\n\"+\n        \"       float length = sl - tmp_pos.x;\\n\"+\n        \"       tmp_pos.x = posX1 - length*cosRot;\\n\"+\n        \"       tmp_pos.z = posZ - length*sinRot;\\n\"+\n        \"    }\\n\"+\n        \"    else if(tmp_pos.x < (sl+cl)){\\n\"+\n        \"       float el = tmp_pos.x - sl;\\n\"+\n        \"       float rotation2 = -el/radii;\\n\"+\n        \"       float x1 = posX1;\\n\"+\n        \"       float y1 = posZ;\\n\"+\n        \"       float x2 = centerX;\\n\"+\n        \"       float y2 = posZ - radii*cosRot;\\n\"+\n        \"       float sinRot2 = sin(rotation2);\\n\"+\n        \"       float cosRot2 = cos(rotation2);\\n\"+\n        \"       tmp_pos.x=(x1-x2)*cosRot2-(y1-y2)*sinRot2+x2;\\n\"+\n        \"       tmp_pos.z=(y1-y2)*cosRot2+(x1-x2)*sinRot2+y2;\\n\"+\n        \"    }\\n\"+\n        \"    else if(tmp_pos.x <= width){\\n\"+\n        \"        float length = tmp_pos.x - cl - sl;\\n\"+\n        \"        tmp_pos.x = posX2 + length*cosRot;\\n\"+\n        \"        tmp_pos.z = posZ - length*sinRot;\\n\"+\n        \"    }\\n\"+\n        \"    tmp_pos += vec4(offx, offy, 0.0, 0.0);\\n\"+\n        \"    gl_Position = CC_MVPMatrix * tmp_pos;\\n\"+\n        \"    v_texCoord = vec2(a_texCoord.x, 1.0-a_texCoord.y);\\n\"+\n        \"}\\n\";\n\n        var endVertSource = \n        \"\\n\" +\n        \"attribute vec2 a_position;\\n\"+\n        \"attribute vec2 a_texCoord;\\n\"+\n        \"uniform float offx;\\n\"+\n        \"uniform float offy;\\n\"+\n        \"varying vec4 v_fragmentColor;\\n\"+\n        \"varying vec2 v_texCoord;\\n\"+\n\n        \"void main()\\n\"+\n        \"{\\n\"+\n        \"   vec4 tmp_pos = vec4(a_position.x, a_position.y, 0.0, 1.0);\\n\"+\n        \"    tmp_pos += vec4(offx, offy, 0.0, 0.0);\\n\"+\n        \"    gl_Position = CC_MVPMatrix * tmp_pos;\\n\"+\n        \"    v_texCoord = vec2(a_texCoord.x, 1.0-a_texCoord.y);\\n\"+\n        \"}\\n\";\n\n        var strFragSource =\n        \"varying vec4 v_fragmentColor;\\n\"+\n        \"varying vec2 v_texCoord;\\n\"+\n        \"void main()\\n\"+\n        \"{\\n\"+\n            \"//TODO, 这里可以做些片段着色特效\\n\"+\n            \"gl_FragColor = texture2D(CC_Texture0, v_texCoord);\\n\"+\n        \"}\\n\";\n\n        var moveGlProgram = this.moveGlProgram = this.__createProgram(moveVertSource, strFragSource);\n        var lTRGlProgram = this.lTRGlProgram = this.__createProgram(lTRVertSource, strFragSource);\n        var rTLGlProgram = this.rTLGlProgram = this.__createProgram(rTLVertSource, strFragSource);\n        var smoothGlProgram = this.smoothGlProgram = this.__createProgram(smoothVertSource, strFragSource);\n        var lTRSmoothGlProgram = this.lTRSmoothGlProgram = this.__createProgram(lTRSmoothVertSource, strFragSource);\n        var endGlProgram = this.endGlProgram = this.__createProgram(endVertSource, strFragSource);\n        this.endGlProgram.retain();\n        this.__intMoveProgram(moveGlProgram, true)\n        this.__intMoveProgram(lTRGlProgram, false)\n        this.__intMoveProgram(rTLGlProgram, false)\n        this.__intSmoothProgram(smoothGlProgram)\n        this.__intSmoothProgram(lTRSmoothGlProgram)\n\n        endGlProgram.offx = endGlProgram.getUniformLocation(\"offx\");\n        endGlProgram.offy = endGlProgram.getUniformLocation(\"offy\");\n    },\n\n    __createProgram:function(vsource, fsource) {\n        var glProgram = cc.GLProgram.createWithByteArrays(vsource, fsource)\n        glProgram.link();\n        glProgram.updateUniforms()\n        return glProgram\n    },\n\n    __intMoveProgram:function(glProgram, isUpDown) {\n        glProgram.rotationLc = glProgram.getUniformLocation(\"rotation\");\n        glProgram.ratio = glProgram.getUniformLocation(\"ratio\");\n        glProgram.radius = glProgram.getUniformLocation(\"radius\");\n        glProgram.offx = glProgram.getUniformLocation(\"offx\");\n        glProgram.offy = glProgram.getUniformLocation(\"offy\");\n        glProgram.Height = glProgram.getUniformLocation(\"height\");\n        glProgram.Width = glProgram.getUniformLocation(\"width\");\n        if(isUpDown)\n        {\n            glProgram.backBufferInfo = this.udBackBufferInfo\n            glProgram.frontBufferInfo= this.udFrontBufferInfo\n        }\n        else\n        {\n            glProgram.backBufferInfo = this.lrBackBufferInfo\n            glProgram.frontBufferInfo= this.lrFrontBufferInfo\n        }\n        glProgram.retain();\n    },\n\n    __intSmoothProgram:function(glProgram) {\n        glProgram.rotationLc = glProgram.getUniformLocation(\"rotation\")\n        glProgram.offx = glProgram.getUniformLocation(\"offx\")\n        glProgram.offy = glProgram.getUniformLocation(\"offy\")\n        glProgram.Height = glProgram.getUniformLocation(\"height\")\n        glProgram.Width = glProgram.getUniformLocation(\"width\");\n        glProgram.retain();\n    },\n\n    __drawByMoveProgram:function(rotation){\n        var glProgram = this.moveGlProgram;\n        if(this.dirState == this.RubCardLayer_Dir_lr)\n        {\n            glProgram = this.lTRGlProgram;\n        }\n        else if(this.dirState == this.RubCardLayer_Dir_rl)\n        {\n            glProgram = this.rTLGlProgram;\n        }\n        gl.enable(gl.CULL_FACE);\n        glProgram.use();\n        glProgram.setUniformsForBuiltins();\n\n        glProgram.setUniformLocationF32(glProgram.rotationLc, rotation);\n        glProgram.setUniformLocationF32(glProgram.ratio, this.ratioVal);\n        glProgram.setUniformLocationF32(glProgram.radius, this.radiusVal);\n        glProgram.setUniformLocationF32(glProgram.offx, this.offx);\n        glProgram.setUniformLocationF32(glProgram.offy, this.offy);\n        glProgram.setUniformLocationF32(glProgram.Height, this.pokerHeight);\n        glProgram.setUniformLocationF32(glProgram.Width, this.pokerWidth);\n        gl.bindTexture(gl.TEXTURE_2D, this.backSpriteId);\n        this.__drawArrays(glProgram.backBufferInfo[0], glProgram.backBufferInfo[1]);\n        gl.bindTexture(gl.TEXTURE_2D, this.frontSpriteId);\n        this.__drawArrays(glProgram.frontBufferInfo[0], glProgram.frontBufferInfo[1]);\n        gl.disable(gl.CULL_FACE);\n    },\n\n    __drawBySmoothProgram: function (rotation){\n        var glProgram = this.smoothGlProgram\n        var buffInfo = this.udFrontBufferInfo\n        if(this.dirState != this.RubCardLayer_Dir_du)\n        {\n\n            glProgram = this.lTRSmoothGlProgram\n            buffInfo = this.lrFrontBufferInfo\n        }\n        glProgram.use();\n        glProgram.setUniformsForBuiltins();\n        gl.bindTexture(gl.TEXTURE_2D, this.frontSpriteId);\n        glProgram.setUniformLocationF32(glProgram.rotationLc, rotation)\n        glProgram.setUniformLocationF32(glProgram.offx, this.offx)\n        glProgram.setUniformLocationF32(glProgram.offy, this.offy)\n        glProgram.setUniformLocationF32(glProgram.Height, this.pokerHeight)\n        glProgram.setUniformLocationF32(glProgram.Width, this.pokerWidth);\n        this.__drawArrays(buffInfo[0], buffInfo[1])\n    },\n\n    __drawByEndProgram:function (){\n        var glProgram = this.endGlProgram;\n        glProgram.use();\n        glProgram.setUniformsForBuiltins();\n\n        gl.bindTexture(gl.TEXTURE_2D, this.frontSpriteId);\n        glProgram.setUniformLocationF32(glProgram.offx, this.offx);\n        glProgram.setUniformLocationF32(glProgram.offy, this.offy);\n        this.__drawArrays(this.udFrontBufferInfo[0], this.udFrontBufferInfo[1]);\n    },\n\n    __drawArrays: function(pos, tex){\n        gl.enableVertexAttribArray(cc.macro.VERTEX_ATTRIB_POSITION);\n        gl.enableVertexAttribArray(cc.macro.VERTEX_ATTRIB_TEX_COORDS);\n        var VERTEX_ATTRIB_POSITION = 0;\n        var VERTEX_ATTRIB_TEX_COORDS = 2;\n        gl.bindBuffer(gl.ARRAY_BUFFER, pos)\n        gl.vertexAttribPointer(VERTEX_ATTRIB_POSITION,2,gl.FLOAT,0,0,0)\n        gl.bindBuffer(gl.ARRAY_BUFFER, tex)\n        gl.vertexAttribPointer(VERTEX_ATTRIB_TEX_COORDS,2,gl.FLOAT,0,0,0)\n\n        gl.drawArrays(gl.TRIANGLES, 0, this.posTexNum)\n        gl.bindBuffer(gl.ARRAY_BUFFER, 0)\n    },\n\n    __initTexAndPos: function(isBack,isLeftRight){\n        var nDiv = this.divNum; //将宽分成100份\n        var verts = new Array(); //位置坐标\n        var texs = new Array(); //纹理坐标\n        var dh = this.pokerHeight/nDiv;\n        var dw = this.pokerWidth;\n        if(isLeftRight){\n            dh = this.pokerHeight;\n            dw = this.pokerWidth/nDiv;\n        }\n        for(var c = 1; c<=nDiv; c++){\n            var x = 0;\n            var y = (c-1)*dh;\n            if(isLeftRight){\n                x = (c-1)*dw;\n                y = 0;\n            }\n            var quad = null;\n            if(isBack){\n                quad = new Array(x, y, x+dw, y, x, y+dh, x+dw, y, x+dw, y+dh, x, y+dh);\n            }\n            else{\n                quad = new Array(x, y, x, y+dh, x+dw, y, x+dw, y, x, y+dh, x+dw, y+dh);\n            };\n            for(var i=0; i<=5; i++){\n                var quadX = quad[i*2]\n                var quadY = quad[i*2+1]\n                var numX = 1 - quadY/this.pokerHeight\n                var numY = quadX/this.pokerWidth\n                texs.push(Math.max(0,numX));\n                texs.push(Math.max(0,numY));\n            };\n            for (var k in quad)\n            {\n                verts.push(quad[k]);\n            };\n        }\n        var posBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        this.posTexNum = verts.length/2;\n\n        var texBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, texBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texs), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        return [posBuffer.buffer_id, texBuffer.buffer_id]\n    },\n\n    __createTextures: function () {\n        var imgUrl = cc.url.raw(this.szFont);\n        this.frontSprite = cc.textureCache.addImage(imgUrl);\n        this.frontSprite.retain();\n\n        imgUrl = cc.url.raw(this.szBack);\n        this.backSprite = cc.textureCache.addImage(imgUrl);\n        this.backSprite.retain();\n\n        var pokerSize = this.backSprite.getContentSize();\n        this.pokerWidth = pokerSize.height\n        this.pokerHeight = pokerSize.width\n\n        this.offx = this.posX - this.pokerWidth/2;\n        this.offy = this.posY - this.pokerHeight/2;\n\n        this.backSpriteId = this.backSprite._glID;//this.backSprite.getName()\n        this.frontSpriteId = this.frontSprite._glID;//this.frontSprite.getName()\n\n        this.touchStartY = cc.winSize.height/2 + this.posY - this.pokerHeight/2;\n        this.touchStartLRX = cc.winSize.width/2 + this.posX - this.pokerWidth/2;\n        this.touchStartRLX = cc.winSize.width/2 + this.posX + this.pokerWidth/2;\n\n        this.radiusVal = this.pokerHeight/10;\n    },\n\n    __deleteBuff: function (buffInfo) {\n        gl._deleteBuffer(buffInfo[0])\n        gl._deleteBuffer(buffInfo[1])\n    },\n\n    //结束需要移除\n    __removeRes: function () {\n        this.node._sgNode.removeChild(this.glnode);\n        this.node._sgNode.removeChild(this.layer);\n        this.__deleteBuff(this.udBackBufferInfo)\n        this.__deleteBuff(this.udFrontBufferInfo)\n        this.__deleteBuff(this.lrBackBufferInfo)\n        this.__deleteBuff(this.lrFrontBufferInfo)\n\n        this.moveGlProgram.release();\n        this.lTRGlProgram.release();\n        this.rTLGlProgram.release();\n        this.smoothGlProgram.release();\n        this.lTRSmoothGlProgram.release();\n        this.endGlProgram.release();\n        this.backSprite.release();\n        this.frontSprite.release();\n    },\n});\n\n"]}